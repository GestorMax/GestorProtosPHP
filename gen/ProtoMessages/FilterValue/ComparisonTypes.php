<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: ProtoMessages/Common.proto

namespace ProtoMessages\FilterValue;

use UnexpectedValueException;

/**
 * Protobuf type <code>protoMessages.FilterValue.ComparisonTypes</code>
 */
class ComparisonTypes
{
    /**
     * Generated from protobuf enum <code>Equals = 0;</code>
     */
    const Equals = 0;
    /**
     * Generated from protobuf enum <code>NotEquals = 1;</code>
     */
    const NotEquals = 1;
    /**
     * Generated from protobuf enum <code>Greater = 2;</code>
     */
    const Greater = 2;
    /**
     * Generated from protobuf enum <code>GreaterOrEquals = 3;</code>
     */
    const GreaterOrEquals = 3;
    /**
     * Generated from protobuf enum <code>Less = 4;</code>
     */
    const Less = 4;
    /**
     * Generated from protobuf enum <code>LessOrEquals = 5;</code>
     */
    const LessOrEquals = 5;
    /**
     * Generated from protobuf enum <code>Contains = 6;</code>
     */
    const Contains = 6;

    private static $valueToName = [
        self::Equals => 'Equals',
        self::NotEquals => 'NotEquals',
        self::Greater => 'Greater',
        self::GreaterOrEquals => 'GreaterOrEquals',
        self::Less => 'Less',
        self::LessOrEquals => 'LessOrEquals',
        self::Contains => 'Contains',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

